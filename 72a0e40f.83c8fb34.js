(window.webpackJsonp=window.webpackJsonp||[]).push([[24],{116:function(e,n,t){"use strict";t.d(n,"a",(function(){return f})),t.d(n,"b",(function(){return d}));var s=t(0),o=t.n(s);function c(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function r(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);n&&(s=s.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,s)}return t}function a(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?r(Object(t),!0).forEach((function(n){c(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):r(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function i(e,n){if(null==e)return{};var t,s,o=function(e,n){if(null==e)return{};var t,s,o={},c=Object.keys(e);for(s=0;s<c.length;s++)t=c[s],n.indexOf(t)>=0||(o[t]=e[t]);return o}(e,n);if(Object.getOwnPropertySymbols){var c=Object.getOwnPropertySymbols(e);for(s=0;s<c.length;s++)t=c[s],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(o[t]=e[t])}return o}var l=o.a.createContext({}),u=function(e){var n=o.a.useContext(l),t=n;return e&&(t="function"==typeof e?e(n):a(a({},n),e)),t},f=function(e){var n=u(e.components);return o.a.createElement(l.Provider,{value:n},e.children)},p={inlineCode:"code",wrapper:function(e){var n=e.children;return o.a.createElement(o.a.Fragment,{},n)}},b=o.a.forwardRef((function(e,n){var t=e.components,s=e.mdxType,c=e.originalType,r=e.parentName,l=i(e,["components","mdxType","originalType","parentName"]),f=u(t),b=s,d=f["".concat(r,".").concat(b)]||f[b]||p[b]||c;return t?o.a.createElement(d,a(a({ref:n},l),{},{components:t})):o.a.createElement(d,a({ref:n},l))}));function d(e,n){var t=arguments,s=n&&n.mdxType;if("string"==typeof e||s){var c=t.length,r=new Array(c);r[0]=b;var a={};for(var i in n)hasOwnProperty.call(n,i)&&(a[i]=n[i]);a.originalType=e,a.mdxType="string"==typeof e?e:s,r[1]=a;for(var l=2;l<c;l++)r[l]=t[l];return o.a.createElement.apply(null,r)}return o.a.createElement.apply(null,t)}b.displayName="MDXCreateElement"},80:function(e,n,t){"use strict";t.r(n),t.d(n,"frontMatter",(function(){return r})),t.d(n,"metadata",(function(){return a})),t.d(n,"rightToc",(function(){return i})),t.d(n,"default",(function(){return u}));var s=t(2),o=t(6),c=(t(0),t(116)),r={id:"examples",title:"Examples"},a={unversionedId:"examples",id:"version-4.0.0-alpha/examples",isDocsHomePage:!1,title:"Examples",description:"Fibonacci",source:"@site/versioned_docs\\version-4.0.0-alpha\\examples.md",permalink:"/nools-ts/docs/examples",editUrl:"https://github.com/nikitait/nools-ts/edit/master/doc-website/versioned_docs/version-4.0.0-alpha/examples.md",version:"4.0.0-alpha",sidebar:"version-4.0.0-alpha/docs",previous:{title:"Compilation",permalink:"/nools-ts/docs/compilation"},next:{title:"Architecture",permalink:"/nools-ts/docs/architecture"}},i=[{value:"Fibonacci",id:"fibonacci",children:[]},{value:"Fibonacci with nools DSL",id:"fibonacci-with-nools-dsl",children:[]}],l={rightToc:i};function u(e){var n=e.components,t=Object(o.a)(e,["components"]);return Object(c.b)("wrapper",Object(s.a)({},l,t,{components:n,mdxType:"MDXLayout"}),Object(c.b)("h2",{id:"fibonacci"},"Fibonacci"),Object(c.b)("pre",null,Object(c.b)("code",Object(s.a)({parentName:"pre"},{className:"language-javascript"}),'"use strict";\n\nvar nools = require("nools");\n\nvar Fibonacci = function (sequence, value) {\n    this.sequence = sequence;\n    this.value = value || -1;\n};\n\nvar Result = function (result) {\n    this.result = result || -1;\n};\n\n\nvar flow = nools.flow("Fibonacci Flow", function (flow) {\n\n    flow.rule("Recurse", [\n        ["not", Fibonacci, "f", "f.sequence == 1"],\n        [Fibonacci, "f1", "f1.sequence != 1"]\n    ], function (facts) {\n        var f2 = new Fibonacci(facts.f1.sequence - 1);\n        this.assert(f2);\n    });\n\n    flow.rule("Bootstrap", [\n          Fibonacci, "f", "f.value == -1 && (f.sequence == 1 || f.sequence == 2)"\n    ], function (facts) {\n        var f = facts.f;\n        f.value = 1;\n        this.modify(f);\n    });\n\n    flow.rule("Calculate", [\n        [Fibonacci, "f1", "f1.value != -1", {sequence:"s1"}],\n        [Fibonacci, "f2", "f2.value != -1 && f2.sequence == s1 + 1", {sequence:"s2"}],\n        [Fibonacci, "f3", "f3.value == -1 && f3.sequence == s2 + 1"],\n        [Result, "r"]\n    ], function (facts) {\n        var f3 = facts.f3, f1 = facts.f1, f2 = facts.f2;\n        var v = f3.value = f1.value + facts.f2.value;\n        facts.r.result = v;\n        this.modify(f3);\n        this.retract(f1);\n    });\n});\n\nvar r1 = new Result(),\n    session1 = flow.getSession(new Fibonacci(10), r1),\n    s1 = new Date;\nsession1.match().then(function () {\n    console.log("%d [%dms]", r1.result, new Date - s1);\n    session1.dispose();\n});\n\nvar r2 = new Result(),\n    session2 = flow.getSession(new Fibonacci(150), r2),\n    s2 = new Date;\nsession2.match().then(function () {\n    console.log("%d [%dms]", r2.result, new Date - s2);\n    session2.dispose();\n});\n\nvar r3 = new Result(),\n    session3 = flow.getSession(new Fibonacci(1000), r3),\n    s3 = new Date;\nsession3.match().then(function () {\n    console.log("%d [%dms]", r3.result, new Date - s3);\n    session3.dispose();\n});\n\n')),Object(c.b)("p",null,"Output"),Object(c.b)("pre",null,Object(c.b)("code",Object(s.a)({parentName:"pre"},{}),"55 [43ms]\n9.969216677189305e+30 [383ms]\n4.346655768693743e+208 [3580ms]\n")),Object(c.b)("h2",{id:"fibonacci-with-nools-dsl"},"Fibonacci with nools DSL"),Object(c.b)("pre",null,Object(c.b)("code",Object(s.a)({parentName:"pre"},{}),"//Define our object classes, you can\n//also declare these outside of the nools\n//file by passing them into the compile method\ndefine Fibonacci {\n    value:-1,\n    sequence:null\n}\ndefine Result {\n    value : -1\n}\n\nrule Recurse {\n    when {\n        //you can use not or or methods in here\n        not(f : Fibonacci f.sequence == 1);\n        //f1 is how you can reference the fact else where\n        f1 : Fibonacci f1.sequence != 1;\n    }\n    then {\n        assert(new Fibonacci({sequence : f1.sequence - 1}));\n    }\n}\n\nrule Bootstrap {\n   when {\n       f : Fibonacci f.value == -1 && (f.sequence == 1 || f.sequence == 2);\n   }\n   then{\n       modify(f, function(){\n           this.value = 1;\n       });\n   }\n}\n\nrule Calculate {\n    when {\n        f1 : Fibonacci f1.value != -1 {sequence : s1};\n        //here we define constraints along with a hash so you can reference sequence\n        //as s2 else where\n        f2 : Fibonacci f2.value != -1 && f2.sequence == s1 + 1 {sequence:s2};\n        f3 : Fibonacci f3.value == -1 && f3.sequence == s2 + 1;\n        r : Result\n    }\n    then {\n        modify(f3, function(){\n            this.value = r.result = f1.value + f2.value;\n        });\n        retract(f1);\n    }\n}\n\n")),Object(c.b)("p",null,"And to run"),Object(c.b)("pre",null,Object(c.b)("code",Object(s.a)({parentName:"pre"},{className:"language-javascript"}),'var flow = nools.compile(__dirname + "/fibonacci.nools");\n\nvar Fibonacci = flow.getDefined("fibonacci"), Result = flow.getDefined("result");\nvar r1 = new Result(),\n    session1 = flow.getSession(new Fibonacci({sequence:10}), r1),\n    s1 = +(new Date());\nsession1.match().then(function () {\n    console.log("%d [%dms]", r1.result, +(new Date()) - s1);\n    session1.dispose();\n});\n\nvar r2 = new Result(),\n    session2 = flow.getSession(new Fibonacci({sequence:150}), r2),\n    s2 = +(new Date());\nsession2.match().then(function () {\n    console.log("%d [%dms]", r2.result, +(new Date()) - s2);\n    session2.dispose();\n});\n\nvar r3 = new Result(),\n    session3 = flow.getSession(new Fibonacci({sequence:1000}), r3),\n    s3 = +(new Date());\nsession3.match().then(function () {\n    console.log("%d [%dms]", r3.result, +(new Date()) - s3);\n    session3.dispose();\n});\n\n')))}u.isMDXComponent=!0}}]);