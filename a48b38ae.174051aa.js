(window.webpackJsonp=window.webpackJsonp||[]).push([[24],{106:function(e,t,n){"use strict";n.d(t,"a",(function(){return b})),n.d(t,"b",(function(){return m}));var r=n(0),s=n.n(r);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function c(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,r,s=function(e,t){if(null==e)return{};var n,r,s={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(s[n]=e[n]);return s}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(s[n]=e[n])}return s}var l=s.a.createContext({}),p=function(e){var t=s.a.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):c(c({},t),e)),n},b=function(e){var t=p(e.components);return s.a.createElement(l.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return s.a.createElement(s.a.Fragment,{},t)}},d=s.a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,a=e.originalType,o=e.parentName,l=i(e,["components","mdxType","originalType","parentName"]),b=p(n),d=r,m=b["".concat(o,".").concat(d)]||b[d]||u[d]||a;return n?s.a.createElement(m,c(c({ref:t},l),{},{components:n})):s.a.createElement(m,c({ref:t},l))}));function m(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var a=n.length,o=new Array(a);o[0]=d;var c={};for(var i in t)hasOwnProperty.call(t,i)&&(c[i]=t[i]);c.originalType=e,c.mdxType="string"==typeof e?e:r,o[1]=c;for(var l=2;l<a;l++)o[l]=n[l];return s.a.createElement.apply(null,o)}return s.a.createElement.apply(null,n)}d.displayName="MDXCreateElement"},80:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return o})),n.d(t,"metadata",(function(){return c})),n.d(t,"rightToc",(function(){return i})),n.d(t,"default",(function(){return p}));var r=n(2),s=n(6),a=(n(0),n(106)),o={id:"facts",title:"Working with facts"},c={unversionedId:"facts",id:"facts",isDocsHomePage:!1,title:"Working with facts",description:"Facts are items that the rules should try to match.",source:"@site/docs\\facts.md",permalink:"/nools-ts/docs/next/facts",editUrl:"https://github.com/facebook/docusaurus/edit/master/website/docs/facts.md",version:"next",sidebar:"docs",previous:{title:"Defining a flow",permalink:"/nools-ts/docs/next/"},next:{title:"Rule structure",permalink:"/nools-ts/docs/next/rule-structure"}},i=[{value:"Assert",id:"assert",children:[]},{value:"Retract",id:"retract",children:[]},{value:"Modify",id:"modify",children:[]},{value:"Retrieving Facts",id:"retrieving-facts",children:[]}],l={rightToc:i};function p(e){var t=e.components,n=Object(s.a)(e,["components"]);return Object(a.b)("wrapper",Object(r.a)({},l,n,{components:t,mdxType:"MDXLayout"}),Object(a.b)("p",null,"Facts are items that the rules should try to match."),Object(a.b)("h2",{id:"assert"},"Assert"),Object(a.b)("p",null,"To add facts to the session use ",Object(a.b)("inlineCode",{parentName:"p"},"assert")," method."),Object(a.b)("pre",null,Object(a.b)("code",Object(r.a)({parentName:"pre"},{className:"language-javascript"}),'session.assert(new Message("hello"));\nsession.assert(new Message("hello world"));\nsession.assert(new Message("goodbye"));\n')),Object(a.b)("p",null,"As a convenience any object passed into ",Object(a.b)("strong",{parentName:"p"},"getSession")," will also be asserted."),Object(a.b)("p",null,Object(a.b)("strong",{parentName:"p"},"Note")," assert is typically used pre engine execution and during the execution of the rules."),Object(a.b)("pre",null,Object(a.b)("code",Object(r.a)({parentName:"pre"},{className:"language-javascript"}),'flow.getSession(new Message("hello"), new Message("hello world"), new Message("goodbye"));\n')),Object(a.b)("h2",{id:"retract"},"Retract"),Object(a.b)("p",null,"To remove facts from the session use the ",Object(a.b)("inlineCode",{parentName:"p"},"retract")," method."),Object(a.b)("pre",null,Object(a.b)("code",Object(r.a)({parentName:"pre"},{className:"language-javascript"}),'var m = new Message("hello");\n\n//assert the fact into the engine\nsession.assert(m);\n\n//remove the fact from the engine\nsession.retract(m);\n\n')),Object(a.b)("p",null,Object(a.b)("strong",{parentName:"p"},"Note")," ",Object(a.b)("inlineCode",{parentName:"p"},"retract")," is typically used during the execution of the rules."),Object(a.b)("h2",{id:"modify"},"Modify"),Object(a.b)("p",null,"To modify a fact use the ",Object(a.b)("inlineCode",{parentName:"p"},"modify")," method."),Object(a.b)("p",null,Object(a.b)("strong",{parentName:"p"},"Note")," modify will not work with immutable objects (i.e. strings)."),Object(a.b)("pre",null,Object(a.b)("code",Object(r.a)({parentName:"pre"},{className:"language-javascript"}),'\nvar m = new Message("hello");\n\nsession.assert(m);\n\nm.text = "hello goodbye";\n\nsession.modify(m);\n\n')),Object(a.b)("p",null,Object(a.b)("strong",{parentName:"p"},"Note")," ",Object(a.b)("inlineCode",{parentName:"p"},"modify")," is typically used during the execution of the rules."),Object(a.b)("h2",{id:"retrieving-facts"},"Retrieving Facts"),Object(a.b)("p",null,"To get a list of facts currently in the session you can use the ",Object(a.b)("inlineCode",{parentName:"p"},"getFacts()")," method exposed on a session."),Object(a.b)("pre",null,Object(a.b)("code",Object(r.a)({parentName:"pre"},{className:"language-javascript"}),'session.assert(1);\nsession.assert("A");\nsession.assert("B");\nsession.assert(2);\n\nsession.getFacts(); //[1, "A", "B", 2];\n')),Object(a.b)("p",null,"You may also pass in a ",Object(a.b)("inlineCode",{parentName:"p"},"Type")," to ",Object(a.b)("inlineCode",{parentName:"p"},"getFacts")," which will return facts only of the given type."),Object(a.b)("pre",null,Object(a.b)("code",Object(r.a)({parentName:"pre"},{className:"language-javascript"}),'session.assert(1);\nsession.assert("A");\nsession.assert("B");\nsession.assert(2);\n\nsession.getFacts(Number); //[1, 2];\nsession.getFacts(String); //["A", "B"];\n')))}p.isMDXComponent=!0}}]);